[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My ambition is ultimately to explain every complex thing in AI to a baby."
  },
  {
    "objectID": "posts/2023-10-20-panda-iloc-loc/index.html",
    "href": "posts/2023-10-20-panda-iloc-loc/index.html",
    "title": "loc vs iloc in Panda",
    "section": "",
    "text": "loc and iloc are often used to select a subset rows or cells in DataFrame Pandas. Here is the summary of how to use these functions."
  },
  {
    "objectID": "posts/2023-10-20-panda-iloc-loc/index.html#using-iloc",
    "href": "posts/2023-10-20-panda-iloc-loc/index.html#using-iloc",
    "title": "loc vs iloc in Panda",
    "section": "Using iloc",
    "text": "Using iloc\nIn general, iloc is used to filter dataframe based on index of row and column as below: df.iloc[&lt;row_index&gt;, &lt;column_index&gt;] in which &lt;row_index&gt;, &lt;column_index&gt; can be one of three types: a single number, a list of numbers or a slice x:y.\nNoted that:\n\ncannot select based on column name when using iloc.\ncan mix type of row_index and column_index (they do not need to be the same type)\nwhen row_index or column_index is a single number, put it in square brackets in order to return a DataFrame; otherwise, it will return a Series\n\n\nExample:\nFor example, we have df dataframe as below:\n\nimport pandas as pd\ndf = pd.DataFrame({'name': ['A', 'B', 'C', 'D', 'E', 'F'], \n                  'salary': [100, 77, 80, 95, 30, 45],\n                  'title': ['Mr', None, 'Ms', 'Mrs', 'Mr', 'Mr'],\n                  'addr': ['123 LTK', '83 PVB', '4 CX', '45/6 LDH', None, None]\n                  })\ndf.head()\n\n\n\n\n\n\n\n\nname\nsalary\ntitle\naddr\n\n\n\n\n0\nA\n100\nMr\n123 LTK\n\n\n1\nB\n77\nNone\n83 PVB\n\n\n2\nC\n80\nMs\n4 CX\n\n\n3\nD\n95\nMrs\n45/6 LDH\n\n\n4\nE\n30\nMr\nNone\n\n\n\n\n\n\n\n\nselect a single row and return a Series\n\n\n#\ndf.iloc[1] # return a Series\n\nname           B\nsalary        77\ntitle       None\naddr      83 PVB\nName: 1, dtype: object\n\n\n\nselect a single row and return a dataframe\n\n\n#\ndf.iloc[[1]] # return a df\n# \n\n\n\n\n\n\n\n\nname\nsalary\ntitle\naddr\n\n\n\n\n1\nB\n77\nNone\n83 PVB\n\n\n\n\n\n\n\n\nselect a subset continuous row with all columns\n\n\n# \ndf.iloc[1:3,]\n\n\n\n\n\n\n\n\nname\nsalary\ntitle\naddr\n\n\n\n\n1\nB\n77\nNone\n83 PVB\n\n\n2\nC\n80\nMs\n4 CX\n\n\n\n\n\n\n\n\nselect a subset continuous row with a subset columns\n\n\n#\ndf.iloc[1:3, 2:]\n\n\n\n\n\n\n\n\ntitle\naddr\n\n\n\n\n1\nNone\n83 PVB\n\n\n2\nMs\n4 CX\n\n\n\n\n\n\n\n\nselect a subset continuous row with one column\n\n\n#\ndf.iloc[1:3, [2]]   # return df\n\n\n\n\n\n\n\n\ntitle\n\n\n\n\n1\nNone\n\n\n2\nMs\n\n\n\n\n\n\n\n\ndf.iloc[1:3, 2]     # return Series\n\n1    None\n2      Ms\nName: title, dtype: object\n\n\n\nselect a subset not continuous row\n\n\n# \ndf.iloc[[0,2,3]] \n\n\n\n\n\n\n\n\nname\nsalary\ntitle\naddr\n\n\n\n\n0\nA\n100\nMr\n123 LTK\n\n\n2\nC\n80\nMs\n4 CX\n\n\n3\nD\n95\nMrs\n45/6 LDH\n\n\n\n\n\n\n\n\nselect a subset not continuous row & not continuous columns\n\n\n# \ndf.iloc[[0,2,3], [0, 2]] \n#\n\n\n\n\n\n\n\n\nname\ntitle\n\n\n\n\n0\nA\nMr\n\n\n2\nC\nMs\n\n\n3\nD\nMrs"
  },
  {
    "objectID": "posts/2023-10-20-panda-iloc-loc/index.html#using-loc",
    "href": "posts/2023-10-20-panda-iloc-loc/index.html#using-loc",
    "title": "loc vs iloc in Panda",
    "section": "Using loc",
    "text": "Using loc\nloc is used for selecting subset dataframe based on value of row and value of column. While value of column is one of three type column name: single, a list or a slice, value of row is filtered by 2 ways: (1) based on index value and (2) based on condition.\nIn the former, index value can be a single or a list of value. In the later, condition is comparison/logical checking of one or more columns. Let see the example:\n\n(1) Select based on index value\n\ndf.loc[[1]] # return the row at index 1\n\n\n\n\n\n\n\n\nname\nsalary\ntitle\naddr\n\n\n\n\n1\nB\n77\nNone\n83 PVB\n\n\n\n\n\n\n\n\nchoose name as a index column\n\n\n# \n# choose `name` as a index column\ndf.set_index('name', inplace=True)\ndf.head()\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nB\n77\nNone\n83 PVB\n\n\nC\n80\nMs\n4 CX\n\n\nD\n95\nMrs\n45/6 LDH\n\n\nE\n30\nMr\nNone\n\n\n\n\n\n\n\n\nselect single index value\n\n\n#\ndf.loc[['A']]\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\n\n\n\n\n\n\nselect a list of index values\n\n\ndf.loc[['A', 'C']]\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nC\n80\nMs\n4 CX\n\n\n\n\n\n\n\n\nselect a list of index values and a list of ccolumn names\n\n\n#\ndf.loc[['A', 'C'],  ['salary', 'addr']]\n\n\n\n\n\n\n\n\nsalary\naddr\n\n\nname\n\n\n\n\n\n\nA\n100\n123 LTK\n\n\nC\n80\n4 CX\n\n\n\n\n\n\n\n\n\n(2) Select based on condition\n\nfilter by one condition\n\n\n#\ndf.loc[df.title == 'Mr']\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nE\n30\nMr\nNone\n\n\nF\n45\nMr\nNone\n\n\n\n\n\n\n\n\nfilter by two conditions\n\n\n#\ndf.loc[(df.salary &gt;= 40) & (df.title == 'Mr')]\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nF\n45\nMr\nNone\n\n\n\n\n\n\n\n\nfilter null value\n\n\n#\n# \ndf.loc[df.salary.isna()]\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\n\n\n\n\n\n\nfilter not null value\n\n\n#\n# filter not null value\ndf.loc[~df.salary.isna()]\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nB\n77\nNone\n83 PVB\n\n\nC\n80\nMs\n4 CX\n\n\nD\n95\nMrs\n45/6 LDH\n\n\nE\n30\nMr\nNone\n\n\nF\n45\nMr\nNone\n\n\n\n\n\n\n\n\n#\ndf.loc[(~df.salary.isna()) & (~df.addr.isna())]\n#\n\n\n\n\n\n\n\n\nsalary\ntitle\naddr\n\n\nname\n\n\n\n\n\n\n\nA\n100\nMr\n123 LTK\n\n\nB\n77\nNone\n83 PVB\n\n\nC\n80\nMs\n4 CX\n\n\nD\n95\nMrs\n45/6 LDH"
  },
  {
    "objectID": "posts/2023-10-20-panda-iloc-loc/index.html#resource",
    "href": "posts/2023-10-20-panda-iloc-loc/index.html#resource",
    "title": "loc vs iloc in Panda",
    "section": "Resource",
    "text": "Resource\n\npandas.ipynb"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html",
    "href": "posts/2023-10-06-setup-env/index.html",
    "title": "Setup ENV",
    "section": "",
    "text": "A guidline for myself to setup env for ML\nNote: NEVER use python of system =&gt; use CONDA or MAMBA to manage python version\n\n\n\nCurrently, Mamba is faster than Miniconda, I follow the instruction here to install: https://github.com/conda-forge/miniforge#mambaforge\n\n# MACOS \n(base) 192 :: ~ » curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\" bash Miniforge3-$(uname)-$(uname -m).sh\n(base) 192 :: ~ » which python3                                                                                                                                                                         1 ↵\n/Users/hatruong/miniforge3/bin/python3\n(base) 192 :: ~ » python3 --version\nPython 3.10.12\n\n(base) 192 :: ~ » alias python=python3\n(base) 192 :: ~ » which python\npython: aliased to python3\n\nNote: I use python3.10 because this is version that Google Colab using\nVirtual Env:\nmamba create -n &lt;nameofmyenv&gt;\nmamba activate &lt;nameofmyenv&gt;\nInstall packages from files:\nmamba install --file &lt;path_of_requirements&gt;\n\n\n\n\n\ninstall fastai using mamba\nmamba install -Uqq fastai\n\n\n\n\n\ninstall: https://quarto.org/docs/get-started/\nfailed to preview + render with vscode so I try with terminal and it works!\nit automatically update when I change file\nhow to publish blog to github: https://quarto.org/docs/publishing/github-pages.html\n# create a branch for publishing\ngit checkout --orphan gh-pages\ngit reset --hard # make sure you've committed changes before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\n\n# update gitignore\n/.quarto/\n/_site/\n\n# publishing\nquarto publish gh-pages\n\n\n\n\n\nit is automatically installed by mamba but there is an incompatible between jupyter notebook and extension (at day of 2023.10.06, version of notebook is 7.x.x which is not work with extension =&gt; we need to downgrade)\npip install --upgrade notebook==6.4.12\n// reinstall traitlets\npip uninstall traitlets\npip install traitlets==5.9.0\ninstall jupyter_contrib_nbextensions\npip install jupyter_contrib_nbextensions\njupyter contrib nbextension install --user\n\nSome useful extensions: Codefolding, Collapse Heading, Table of Content\nauto-format code: step (1) pip install autopep8, step (2) enable autopep8 in nbextensions\nto view document of func in jupyter notebook, we install pip install nbdev\nConvert notebook to python script, we use nbdev.export.nb_export Please refer to this file for example: https://huggingface.co/spaces/hatruong/minima/blob/main/app.ipynb\n\n\n\n\n\nCUDA:\n# check if cuda is really installed or not\nnvcc --version\n#\n# install\nsudo apt install nvidia-cuda-toolkit\nSome common packages\ndiffusers\ntransformers\nhuggingface-hub"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html#mamba-manage-python-package",
    "href": "posts/2023-10-06-setup-env/index.html#mamba-manage-python-package",
    "title": "Setup ENV",
    "section": "",
    "text": "Currently, Mamba is faster than Miniconda, I follow the instruction here to install: https://github.com/conda-forge/miniforge#mambaforge\n\n# MACOS \n(base) 192 :: ~ » curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\" bash Miniforge3-$(uname)-$(uname -m).sh\n(base) 192 :: ~ » which python3                                                                                                                                                                         1 ↵\n/Users/hatruong/miniforge3/bin/python3\n(base) 192 :: ~ » python3 --version\nPython 3.10.12\n\n(base) 192 :: ~ » alias python=python3\n(base) 192 :: ~ » which python\npython: aliased to python3\n\nNote: I use python3.10 because this is version that Google Colab using\nVirtual Env:\nmamba create -n &lt;nameofmyenv&gt;\nmamba activate &lt;nameofmyenv&gt;\nInstall packages from files:\nmamba install --file &lt;path_of_requirements&gt;"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html#fastai",
    "href": "posts/2023-10-06-setup-env/index.html#fastai",
    "title": "Setup ENV",
    "section": "",
    "text": "install fastai using mamba\nmamba install -Uqq fastai"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html#quarto-blogging",
    "href": "posts/2023-10-06-setup-env/index.html#quarto-blogging",
    "title": "Setup ENV",
    "section": "",
    "text": "install: https://quarto.org/docs/get-started/\nfailed to preview + render with vscode so I try with terminal and it works!\nit automatically update when I change file\nhow to publish blog to github: https://quarto.org/docs/publishing/github-pages.html\n# create a branch for publishing\ngit checkout --orphan gh-pages\ngit reset --hard # make sure you've committed changes before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\n\n# update gitignore\n/.quarto/\n/_site/\n\n# publishing\nquarto publish gh-pages"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html#jupyter-notebook",
    "href": "posts/2023-10-06-setup-env/index.html#jupyter-notebook",
    "title": "Setup ENV",
    "section": "",
    "text": "it is automatically installed by mamba but there is an incompatible between jupyter notebook and extension (at day of 2023.10.06, version of notebook is 7.x.x which is not work with extension =&gt; we need to downgrade)\npip install --upgrade notebook==6.4.12\n// reinstall traitlets\npip uninstall traitlets\npip install traitlets==5.9.0\ninstall jupyter_contrib_nbextensions\npip install jupyter_contrib_nbextensions\njupyter contrib nbextension install --user\n\nSome useful extensions: Codefolding, Collapse Heading, Table of Content\nauto-format code: step (1) pip install autopep8, step (2) enable autopep8 in nbextensions\nto view document of func in jupyter notebook, we install pip install nbdev\nConvert notebook to python script, we use nbdev.export.nb_export Please refer to this file for example: https://huggingface.co/spaces/hatruong/minima/blob/main/app.ipynb"
  },
  {
    "objectID": "posts/2023-10-06-setup-env/index.html#setup-deeplearning",
    "href": "posts/2023-10-06-setup-env/index.html#setup-deeplearning",
    "title": "Setup ENV",
    "section": "",
    "text": "CUDA:\n# check if cuda is really installed or not\nnvcc --version\n#\n# install\nsudo apt install nvidia-cuda-toolkit\nSome common packages\ndiffusers\ntransformers\nhuggingface-hub"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Blogging what I’ve learned about ML, DL, etc."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hannah Blog",
    "section": "",
    "text": "loc vs iloc in Panda\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nOct 20, 2023\n\n\nHa Truong\n\n\n\n\n\n\n  \n\n\n\n\nSetup ENV\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nOct 6, 2023\n\n\nHa Truong\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2023\n\n\nHa Truong\n\n\n\n\n\n\nNo matching items"
  }
]